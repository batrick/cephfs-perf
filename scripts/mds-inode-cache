#!/bin/bash

set -ex

NAME=mds-inode-cache

RAW="$1/$NAME.raw"
DATA="$1/$NAME.dat"
GRAPH="$1/$NAME.eps"

(
    cd "$1"
    for mds in ceph-mds*; do
        sqlite3 -separator $'\t' -noheader "$mds/stats.db" <<EOF
SELECT timestamp, json_extract(status, '$.whoami'), json_extract(perf_dump, '$.mds_mem.ino')
    FROM MDSStatus
    ORDER BY timestamp
    ;
EOF
    done
) > "$RAW"

# one data point per second
lua - <<EOF > "$DATA"
local mds = {}
local min_timestamp = math.maxinteger
local max_timestamp = 0
for line in io.lines("$RAW") do
    local timestamp, rank, ino = line:match "(%d+)\\t(%d+)\\t(%d+)"
    rank = math.tointeger(rank)
    timestamp = math.tointeger(timestamp)
    mds[rank] = mds[rank] or {timestamps={},last=math.maxinteger-1,first=timestamp}
    mds[rank].timestamps[timestamp] = ino
    for i = mds[rank].last+1, timestamp-1 do
        local step = (mds[rank].timestamps[mds[rank].last]+ino)//(timestamp-mds[rank].last)
        mds[rank].timestamps[i] = mds[rank].timestamps[i-1]+step
    end
    mds[rank].last = timestamp
    min_timestamp = math.min(min_timestamp, timestamp)
    max_timestamp = math.max(max_timestamp, timestamp)
end

for rank, mds in pairs(mds) do
    for i = min_timestamp, mds.first do
        mds.timestamps[i] = 0
    end
    for i = mds.last, max_timestamp do
        mds.timestamps[i] = 0
    end
end

local ranks = {}
for rank, mds in pairs(mds) do
    ranks[#ranks+1] = rank
end
table.sort(ranks)

io.write 'timestamp'
for _, rank in ipairs(ranks) do
    io.write('\\t', rank)
end
io.write '\\n'
for i = min_timestamp, max_timestamp do
    io.write(i-min_timestamp)
    for _, rank in ipairs(ranks) do
        io.write('\\t', mds[rank].timestamps[i])
    end
    io.write '\\n'
end
EOF

gnuplot <<EOF
set datafile separator "\\t"
set terminal postscript eps color
set output '${GRAPH}'

DATA = "${DATA}"

stats DATA skip 1
# using floor to convert float to int
COL = floor(STATS_columns)

set xdata time
set timefmt "%s"
set format x "%H:%M"
set xlabel "Time (hh:mm)"
set xtics rotate by -45 offset -.8,0

set key below title "MDS Rank"

set ylabel "inodes in cache"
set mytics

plot for [i=2:COL] DATA using 1:(sum [col=i:COL] column(col)) with filledcurves x1 title columnheader(i)
EOF

convert -flatten -density 800x800 "$GRAPH" "$(dirname "$GRAPH")/$(basename "$GRAPH" .eps).png"
